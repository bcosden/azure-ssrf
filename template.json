{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "publicIPAddresses_appgw_pip_domainNameLabel": {
            "defaultValue": "sarosssrf90123",
            "type": "SecureString"
        },
        "virtualMachines_ssrfvm01_name": {
            "defaultValue": "ssrfvm01",
            "type": "String"
        },
        "applicationGateways_appgw01_name": {
            "defaultValue": "appgw01",
            "type": "String"
        },
        "publicIPAddresses_appgw_pip_name": {
            "defaultValue": "appgw_pip",
            "type": "String"
        },        
        "networkInterfaces_ssrfvm0167_name": {
            "defaultValue": "ssrfvm0167",
            "type": "String"
        },
        "publicIPAddresses_ssrfvm01_ip_name": {
            "defaultValue": "ssrfvm01-ip",
            "type": "String"
        },
        "virtualNetworks_az_ssrf_rg_vnet_name": {
            "defaultValue": "az-ssrf-rg-vnet",
            "type": "String"
        },
        "networkSecurityGroups_ssrfvm01_nsg_name": {
            "defaultValue": "ssrfvm01-nsg",
            "type": "String"
        },
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "string"
       },
        "adminUsername": {
            "defaultValue": "azureuser",
            "type": "string"
        },
        "adminPublicKey": {
            "type": "string"
        }
    },
    "variables": {
        "vNetaddressPrefix": "10.20.0.0/16",
        "DefaultSubnetPrefix": "10.20.0.0/24",
        "GatewaySubnetPrefix": "10.20.1.0/24",
        "VMSize": "Standard_D2s_v3",
        "Publisher": "Canonical",
        "Offer": "UbuntuServer",
        "Sku": "18.04-LTS",
        "Version": "latest",
        "OSType": "Linux"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-08-01",
            "name": "[parameters('networkSecurityGroups_ssrfvm01_nsg_name')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "HTTP",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 320,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-08-01",
            "name": "[parameters('publicIPAddresses_ssrfvm01_ip_name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-08-01",
            "name": "[parameters('publicIPAddresses_appgw_pip_name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "[parameters('publicIPAddresses_appgw_pip_domainNameLabel')]"
                },
                "ipTags": []
            }
        },        
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-08-01",
            "name": "[parameters('virtualNetworks_az_ssrf_rg_vnet_name')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vNetaddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "[variables('DefaultSubnetPrefix')]",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "gateway",
                        "properties": {
                            "addressPrefix": "[variables('GatewaySubnetPrefix')]",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[parameters('virtualMachines_ssrfvm01_name')]",
            "location": "[parameters('location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ssrfvm0167_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('VMSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('Publisher')]",
                        "offer": "[variables('Offer')]",
                        "sku": "[variables('Sku')]",
                        "version": "[variables('Version')]"
                    },
                    "osDisk": {
                        "osType": "[variables('OSType')]",
                        "name": "[concat(parameters('virtualMachines_ssrfvm01_name'), '_disk1_990e4846164447628b2913578e8e202d')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        },
                        "diskSizeGB": 30
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_ssrfvm01_name')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "customData": "[base64(concat('#cloud-config\n\npackage_upgrade: true\n\npackages:\n - apache2\n - php\n - libapache2-mod-php\n\nruncmd:\n - git clone https://github.com/bcosden/azure-ssrf.git /home/',parameters('adminUsername'),'/ssrf\n - cp /home/',parameters('adminUsername'),'/ssrf/index.php /var/www/html/\n - rm -rf /home/',parameters('adminUsername'),'/ssrf'))]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "provisionVMAgent": true,
                        "ssh": {
                            "publicKeys": [
                              {
                                "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                "keyData": "[parameters('adminPublicKey')]"
                              }
                            ]
                        }                        
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ssrfvm0167_name'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-08-01",
            "name": "[concat(parameters('networkSecurityGroups_ssrfvm01_nsg_name'), '/HTTP')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_ssrfvm01_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 320,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-08-01",
            "name": "[concat(parameters('networkSecurityGroups_ssrfvm01_nsg_name'), '/SSH')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_ssrfvm01_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 300,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-08-01",
            "name": "[concat(parameters('virtualNetworks_az_ssrf_rg_vnet_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_az_ssrf_rg_vnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "[variables('DefaultSubnetPrefix')]",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-08-01",
            "name": "[concat(parameters('virtualNetworks_az_ssrf_rg_vnet_name'), '/gateway')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_az_ssrf_rg_vnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "[variables('GatewaySubnetPrefix')]",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2019-08-01",
            "name": "[parameters('applicationGateways_appgw01_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_az_ssrf_rg_vnet_name'), 'gateway')]",
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_appgw_pip_name'))]"
            ],
            "properties": {
                "sku": {
                    "name": "WAF_Medium",
                    "tier": "WAF",
                    "capacity": 1
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "appGatewayIpConfig",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_az_ssrf_rg_vnet_name'), 'gateway')]"
                            }
                        }
                    }
                ],
                "sslCertificates": [],
                "authenticationCertificates": [],
                "frontendIPConfigurations": [
                    {
                        "name": "appGwPublicFrontendIp",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_appgw_pip_name'))]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "port_80",
                        "properties": {
                            "port": 80
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "ssrf_be",
                        "properties": {
                            "backendAddresses": []
                        }
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "http01",
                        "properties": {
                            "port": 80,
                            "protocol": "Http",
                            "cookieBasedAffinity": "Disabled",
                            "pickHostNameFromBackendAddress": false,
                            "requestTimeout": 20
                        }
                    }
                ],
                "httpListeners": [
                    {
                        "name": "http01",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_appgw01_name')), '/frontendIPConfigurations/appGwPublicFrontendIp')]"
                            },
                            "frontendPort": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_appgw01_name')), '/frontendPorts/port_80')]"
                            },
                            "protocol": "Http",
                            "requireServerNameIndication": false
                        }
                    }
                ],
                "urlPathMaps": [],
                "requestRoutingRules": [
                    {
                        "name": "rule01",
                        "properties": {
                            "ruleType": "Basic",
                            "httpListener": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_appgw01_name')), '/httpListeners/http01')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_appgw01_name')), '/backendAddressPools/ssrf_be')]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_appgw01_name')), '/backendHttpSettingsCollection/http01')]"
                            }
                        }
                    }
                ],
                "probes": [],
                "rewriteRuleSets": [],
                "redirectConfigurations": [],
                "webApplicationFirewallConfiguration": {
                    "enabled": true,
                    "firewallMode": "Prevention",
                    "ruleSetType": "OWASP",
                    "ruleSetVersion": "3.0",
                    "disabledRuleGroups": [],
                    "requestBodyCheck": true,
                    "maxRequestBodySizeInKb": 128,
                    "fileUploadLimitInMb": 100
                },
                "enableHttp2": false
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-08-01",
            "name": "[parameters('networkInterfaces_ssrfvm0167_name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_ssrfvm01_ip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_az_ssrf_rg_vnet_name'), 'default')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_ssrfvm01_nsg_name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_ssrfvm01_ip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_az_ssrf_rg_vnet_name'), 'default')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4",
                            "applicationGatewayBackendAddressPools": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_appgw01_name')), '/backendAddressPools/ssrf_be')]"
                                }
                            ]
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_ssrfvm01_nsg_name'))]"
                }
            }
        }
    ]
}